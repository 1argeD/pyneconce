# pyneconce

pc init을 실행할시 
hello라는 프로젝트 폴더를 생성하고, 터미널에서 pc.init를 실행하
아래와 같은 구조가 자동으로 실행된다

hello 
|-.web
|-.assets
|-hello
|   |-__init__.py
|   |_hello.py
|_pcconfig.py


1- hello 프로젝트 루트 폴더
직접 생성한 프로젝트 폴더 
pynecone은 앱이름이 곧 폴더명이 기본 값이 된다.
(가급적으로 숫자로 시작하는 프로젝트명은 지양한다.임포트 할 경우 오류가 날 다능성이 있음.)


2-.web 컴파일된 js파일이 저장되는 폴더
프로젝 파일에서 작성된 포드 중 프론트엔드 파트는 NextJS 앱으로 컴파일 되어 동일한 이름의 js 파일 저장된다
.web 폴더는 컴파일 된 자바스크립트 파일과, 이밖에도 node.js 관련된 모듈 등이 저장된다.
대부분의 자바스크립트 파일로 구성되어 있으, 웹팩이나 설정관 json, favicon 및 각종 node.js 모듈이 전부 저장되어 있다.

자바스크립트 문법이나 컴파일 오류가 발생하
이 폴더의 하위 생성된 자바스크립트 파일에 오류의 구체적인 원인을 확인할 수가 있다.
(이 정보를 디버깅에 사용할 수 있음.)

하지만 이렇게 생성된 js 파일을 직접 수정하는 것은 pc run으로 서버를 구동하는 시점에 모든 js 파일이 다시 컴파일 되기에 의미가 없다.


3-assets 정적 파일(static files) 저장소 

이미지나 동영, favicon 및 첨부 파일들을 저장하는 곳이다.
django의 경우 관례적인 static이라는 폴더를 사용하는데(Flask도 동일),
파인콘의 경우 이 폴더가 이와 동일한 역할을 맡고 있다.

  이미를 삽입 할 경우 pc.image(src="image.png")방식으로 
  컴포넌트를 만들어서 사용하면 된다.
  이 때 image.png 파일을 assets 폴더 안에 있어야 한다.
  
pc init를 초기화 할 경우 favicon.ico가 복사 된다.
솔방울을 형상화한 파인콘의 로고이다.

4- hello/hello/hello.py : 앱 폴 및 앱 파일

터미널 init을 실행하면 프로젝트 폴더명(hello)과 동일한 앱 폴더가 생성되고,
앱폴더를 파이썬패키지로 인식하기 위한 __init__.py 파일이 기본적으로 생성된다.

  대부분의 경우 init.py 가 없어도 잘 실행된다.
  
앱 폴더 안에 프로젝트 폴더명과 동일한 이름의 파이썬 파일(hello.py)가 실행된다.
이 파일이 프로젝트의 기본 앱이며 대부분 이 파일에 코드를 추가하면 앱이 완성된다.

5-pcconfig.py : 프로젝트 설정 파일

  import pynecone as pc
  
  config = pc.Config(
    app_name="hello", #앱이름 
    api_url="192.168.1.1:8000", #요청 api 주소
    bun_path="$HOME/.bun/bin/bun", #자바스크립트 런타임 bun을 js라이브러리 관리 툴로 사용할 수 있는 라인
    db_url="sqlite:///pynecone.db", 
  )
  
  등 환경을 설정할 수 있다. 
  단 bun 은 아직 windowOS에서는 지원하지 않으며, wsl에서는 설치 및 실행 가능하다.

